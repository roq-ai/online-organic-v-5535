generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model discount {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  discount_percentage Int
  start_date          DateTime  @db.Timestamp(6)
  end_date            DateTime  @db.Timestamp(6)
  inventory_id        String    @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  inventory           inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String       @db.VarChar(255)
  quantity       Int
  price          Int
  expiry_date    DateTime     @db.Timestamp(6)
  supermarket_id String       @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  discount       discount[]
  supermarket    supermarket  @relation(fields: [supermarket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item     order_item[]
}

model order {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_date     DateTime     @db.Timestamp(6)
  delivery_date  DateTime?    @db.Timestamp(6)
  total_price    Int
  user_id        String       @db.Uuid
  supermarket_id String       @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  supermarket    supermarket  @relation(fields: [supermarket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item     order_item[]
}

model order_item {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity     Int
  price        Int
  order_id     String    @db.Uuid
  inventory_id String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  inventory    inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order        order     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supermarket {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?     @db.VarChar(255)
  location      String?     @db.VarChar(255)
  opening_hours String?     @db.VarChar(255)
  closing_hours String?     @db.VarChar(255)
  name          String      @db.VarChar(255)
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  user_id       String      @db.Uuid
  tenant_id     String      @db.VarChar(255)
  inventory     inventory[]
  order         order[]
  user          user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  order       order[]
  supermarket supermarket[]
}
